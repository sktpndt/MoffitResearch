geom_smooth(method = "lm", formula = formula, se = F) +
stat_fit_glance(method = 'lm',
method.args = list(formula = formula),
geom = 'text',
aes(label = sprintf('r^2 = %.3f\nP = %.2g',
after_stat(r.squared), after_stat(p.value))),
size = 3,
label.x = -1, label.y = 4)
gridExtra::grid.arrange(p1,p2,p3,p4, nrow = 2)
coef <- c(lm_nf$coefficients[2],
lm_nt$coefficients[2],
lm_prt$coefficients[2],
lm_tay$coefficients[2])
# Performing Regression
formula = SJR_2021 ~ Number_of_Followers + Number_of_Tweets +
Percentage._of_Retweets + Twitter_Age_Years
mv_anal <- list()
specs <- levels(sub_dat_norm$Journal_Specialty)
for(i in 1:4){
spec <- specs[i]
dat <- dplyr::filter(sub_dat_norm, Journal_Specialty == spec)
lm <- lm(formula, dat)
mv_anal[[i]] <- lm
}
# Creating Table
specs <- c("Cardiothoracic Surgery",
"Neurosurgery",
"Orthopedic Surgery",
"Plastic Surgery")
rsq <- c(summary(mv_anal[[1]])$r.squared,
summary(mv_anal[[2]])$r.squared,
summary(mv_anal[[3]])$r.squared,
summary(mv_anal[[4]])$r.squared)
pval <- c(pf(summary(mv_anal[[1]])$fstatistic[1],
summary(mv_anal[[1]])$fstatistic[2],
summary(mv_anal[[1]])$fstatistic[3],
lower.tail = F),
pf(summary(mv_anal[[2]])$fstatistic[1],
summary(mv_anal[[2]])$fstatistic[2],
summary(mv_anal[[1]])$fstatistic[3],
lower.tail = F),
pf(summary(mv_anal[[3]])$fstatistic[1],
summary(mv_anal[[3]])$fstatistic[2],
summary(mv_anal[[3]])$fstatistic[3],
lower.tail = F),
pf(summary(mv_anal[[4]])$fstatistic[1],
summary(mv_anal[[4]])$fstatistic[2],
summary(mv_anal[[4]])$fstatistic[3],
lower.tail = F)
)
cors_byspec <- data.frame(specs,
round(rsq, 3),
round(pval, 3))
colnames(cors_byspec) <- c("Specialty", "R-squared", "P-value")
knitr::kable(cors_byspec)
knitr::opts_chunk$set(echo = TRUE)
formula = SJR_2021 ~ Number_of_Followers + Number_of_Tweets +
Percentage._of_Retweets + Twitter_Age_Years + Number_of_Follwoers*Number_of_Tweets*Percentage._of_Retweets*Twitter_Age_Years
lm_multi <- lm(formula, sub_dat_norm)
formula = Number_of_Followers*Number_of_Tweets*Percentage._of_Retweets*Twitter_Age_Years
formula = SJR_2021 ~ Number_of_Followers*Number_of_Tweets*Percentage._of_Retweets*Twitter_Age_Years
lm_multi <- lm(formula, sub_dat_norm)
library(ggplot2)
library(gridExtra)
library(ggpmisc)
knitr::opts_chunk$set(echo = TRUE)
# Reading the Data -----------------------------------------------------
setwd("/Users/saketpandit/Documents/NSU/Research_Consortium/Impact_Factor")
# Set file name
path <- "Data/IF_Data.csv"
# Getting the data out of the sheets
all_dat <- read.csv(path)
# Cleaning the Data -------------------------------------------------------
library(tidyverse)
# Setting Journal Specialty as a factor
all_dat$Journal_Specialty <- as.factor(all_dat$Journal_Specialty)
# Fixing numerical variables with commas (weird)
weirdVars <- c("Number_of_Followers",
"Twitter_Age_Days",
"Number_of_Tweets")
for(var in weirdVars){
all_dat[, var] <- as.numeric(gsub(",", "", all_dat[, var]))
}
# Selecting variables of interest for correlations
sub_dat <- all_dat %>%
dplyr::select(c(SJR_2021,
Number_of_Followers,
Number_of_Tweets,
Percentage._of_Retweets,
Change_in_SJR,
Change_Total_Cites_PerYear,
Twitter_Age_Years,
Journal_Specialty))
# Scaling / Normalizing the data
sub_dat_norm <- sub_dat
sub_dat_norm[,-ncol(sub_dat_norm)] <- scale(sub_dat_norm[,-ncol(sub_dat_norm)])
formula <- y ~ x
# SJR vs NF
p1 <- ggplot(sub_dat_norm, aes(x = Number_of_Followers, y = SJR_2021)) +
xlab("Number of Followers") +
ylab("SJR (2021)") +
geom_point(alpha = 0.3) +
geom_smooth(method = "lm", formula = formula, se = F) #+
# stat_fit_glance(method = 'lm',
#                 method.args = list(formula = formula),
#                 geom = 'text',
#                 aes(label = sprintf('r^2 = %.3f\nP = %.2g',
#                                     after_stat(r.squared), after_stat(p.value))),
#                 size = 3,
#                 label.x = 3, label.y = 4)
# SJR vs NT
p2 <- ggplot(sub_dat_norm, aes(x = Number_of_Tweets, y = SJR_2021)) +
geom_point(alpha = 0.3) +
xlab("Number of Tweets") +
ylab("") +
geom_smooth(method = "lm", formula = formula, se = F)# +
# stat_fit_glance(method = 'lm',
#                 method.args = list(formula = formula),
#                 geom = 'text',
#                 aes(label = sprintf('r^2 = %.3f\nP = %.2g',
#                                     after_stat(r.squared), after_stat(p.value))),
#                 size = 3,
#                 label.x = 4, label.y = 4)
# SJR vs PRT
p3 <- ggplot(sub_dat_norm, aes(x = Percentage._of_Retweets, y = SJR_2021)) +
xlab("% of Retweets") +
ylab("SJR (2021)") +
geom_point(alpha = 0.3) +
geom_smooth(method = "lm", formula = formula, se = F)# +
# stat_fit_glance(method = 'lm',
#                 method.args = list(formula = formula),
#                 geom = 'text',
#                 aes(label = sprintf('r^2 = %.3f\nP = %.2g',
#                                     after_stat(r.squared), after_stat(p.value))),
#                 size = 3,
#                 label.x = -1, label.y = 4)
p4 <- ggplot(sub_dat_norm, aes(x = Twitter_Age_Years, y = SJR_2021)) +
geom_point(alpha = 0.3) +
xlab("Twitter Age (Years)") +
ylab("") +
geom_smooth(method = "lm", formula = formula, se = F)# +
# stat_fit_glance(method = 'lm',
#                 method.args = list(formula = formula),
#                 geom = 'text',
#                 aes(label = sprintf('r^2 = %.3f\nP = %.2g',
#                                     after_stat(r.squared), after_stat(p.value))),
#                 size = 3,
#                 label.x = -1, label.y = 4)
gridExtra::grid.arrange(p1,p2,p3,p4, nrow = 2)
# Regressions for each variable
lm_nf <- lm(SJR_2021 ~ Number_of_Followers, sub_dat_norm)
lm_nt = lm(SJR_2021 ~ Number_of_Tweets, sub_dat_norm)
lm_prt = lm(SJR_2021 ~ Percentage._of_Retweets, sub_dat_norm)
lm_tay = lm(SJR_2021 ~ Twitter_Age_Years, sub_dat_norm)
# Correlations table
coef <- c(lm_nf$coefficients[2],
lm_nt$coefficients[2],
lm_prt$coefficients[2],
lm_tay$coefficients[2])
rsq <- c(summary(lm_nf)$r.squared,
summary(lm_nt)$r.squared,
summary(lm_prt)$r.squared,
summary(lm_tay)$r.squared)
pval <- c(summary(lm_nf)$coefficients[2,4],
summary(lm_nt)$coefficients[2,4],
summary(lm_prt)$coefficients[2,4],
summary(lm_tay)$coefficients[2,4])
cors_allspec <- data.frame(round(coef, 3),
round(rsq, 3),
round(pval, 3))
colnames(cors_allspec) <- c("Coefficient", "R-squared", "P-value")
rownames(cors_allspec) <- c("Number of Followers",
"Number of Tweets",
"Percentage of Retweets",
"Twitter Age (Years)")
knitr::kable(cors_allspec)
library(ggplot2)
library(gridExtra)
library(ggpmisc)
knitr::opts_chunk$set(echo = TRUE)
# Reading the Data -----------------------------------------------------
setwd("/Users/saketpandit/Documents/NSU/Research_Consortium/Impact_Factor")
# Set file name
path <- "Data/IF_Data.csv"
# Getting the data out of the sheets
all_dat <- read.csv(path)
# Cleaning the Data -------------------------------------------------------
library(tidyverse)
# Setting Journal Specialty as a factor
all_dat$Journal_Specialty <- as.factor(all_dat$Journal_Specialty)
# Fixing numerical variables with commas (weird)
weirdVars <- c("Number_of_Followers",
"Twitter_Age_Days",
"Number_of_Tweets")
for(var in weirdVars){
all_dat[, var] <- as.numeric(gsub(",", "", all_dat[, var]))
}
# Selecting variables of interest for correlations
sub_dat <- all_dat %>%
dplyr::select(c(SJR_2021,
Number_of_Followers,
Number_of_Tweets,
Percentage._of_Retweets,
Change_in_SJR,
Change_Total_Cites_PerYear,
Twitter_Age_Years,
Journal_Specialty))
# Scaling / Normalizing the data
sub_dat_norm <- sub_dat
sub_dat_norm[,-ncol(sub_dat_norm)] <- scale(sub_dat_norm[,-ncol(sub_dat_norm)])
formula <- y ~ x
# SJR vs NF
p1 <- ggplot(sub_dat_norm, aes(x = Number_of_Followers, y = SJR_2021)) +
xlab("Number of Followers") +
ylab("SJR (2021)") +
geom_point(alpha = 0.3) +
geom_smooth(method = "lm", formula = formula, se = F) #+
# stat_fit_glance(method = 'lm',
#                 method.args = list(formula = formula),
#                 geom = 'text',
#                 aes(label = sprintf('r^2 = %.3f\nP = %.2g',
#                                     after_stat(r.squared), after_stat(p.value))),
#                 size = 3,
#                 label.x = 3, label.y = 4)
# SJR vs NT
p2 <- ggplot(sub_dat_norm, aes(x = Number_of_Tweets, y = SJR_2021)) +
geom_point(alpha = 0.3) +
xlab("Number of Tweets") +
ylab("") +
geom_smooth(method = "lm", formula = formula, se = F)# +
# stat_fit_glance(method = 'lm',
#                 method.args = list(formula = formula),
#                 geom = 'text',
#                 aes(label = sprintf('r^2 = %.3f\nP = %.2g',
#                                     after_stat(r.squared), after_stat(p.value))),
#                 size = 3,
#                 label.x = 4, label.y = 4)
# SJR vs PRT
p3 <- ggplot(sub_dat_norm, aes(x = Percentage._of_Retweets, y = SJR_2021)) +
xlab("% of Retweets") +
ylab("SJR (2021)") +
geom_point(alpha = 0.3) +
geom_smooth(method = "lm", formula = formula, se = F)# +
# stat_fit_glance(method = 'lm',
#                 method.args = list(formula = formula),
#                 geom = 'text',
#                 aes(label = sprintf('r^2 = %.3f\nP = %.2g',
#                                     after_stat(r.squared), after_stat(p.value))),
#                 size = 3,
#                 label.x = -1, label.y = 4)
p4 <- ggplot(sub_dat_norm, aes(x = Twitter_Age_Years, y = SJR_2021)) +
geom_point(alpha = 0.3) +
xlab("Twitter Age (Years)") +
ylab("") +
geom_smooth(method = "lm", formula = formula, se = F)# +
# stat_fit_glance(method = 'lm',
#                 method.args = list(formula = formula),
#                 geom = 'text',
#                 aes(label = sprintf('r^2 = %.3f\nP = %.2g',
#                                     after_stat(r.squared), after_stat(p.value))),
#                 size = 3,
#                 label.x = -1, label.y = 4)
gridExtra::grid.arrange(p1,p2,p3,p4, nrow = 2)
# Regressions for each variable
lm_nf <- lm(SJR_2021 ~ Number_of_Followers, sub_dat_norm)
lm_nt = lm(SJR_2021 ~ Number_of_Tweets, sub_dat_norm)
lm_prt = lm(SJR_2021 ~ Percentage._of_Retweets, sub_dat_norm)
lm_tay = lm(SJR_2021 ~ Twitter_Age_Years, sub_dat_norm)
# Correlations table
coef <- c(lm_nf$coefficients[2],
lm_nt$coefficients[2],
lm_prt$coefficients[2],
lm_tay$coefficients[2])
rsq <- c(summary(lm_nf)$r.squared,
summary(lm_nt)$r.squared,
summary(lm_prt)$r.squared,
summary(lm_tay)$r.squared)
pval <- c(summary(lm_nf)$coefficients[2,4],
summary(lm_nt)$coefficients[2,4],
summary(lm_prt)$coefficients[2,4],
summary(lm_tay)$coefficients[2,4])
cors_allspec <- data.frame(round(coef, 3),
round(rsq, 3),
round(pval, 3))
colnames(cors_allspec) <- c("Coefficient", "R-squared", "P-value")
rownames(cors_allspec) <- c("Number of Followers",
"Number of Tweets",
"Percentage of Retweets",
"Twitter Age (Years)")
knitr::kable(cors_allspec)
formula = SJR_2021 ~ Number_of_Followers*Number_of_Tweets*Percentage._of_Retweets*Twitter_Age_Years
lm_multi <- lm(formula, sub_dat_norm)
summary(lm_multi)
specs <- levels(sub_dat_norm$Journal_Specialty)
specs <- levels(sub_dat_norm$Journal_Specialty)
specs <- levels(sub_dat_norm$Journal_Specialty)
# Performing Regression
formula = SJR_2021 ~ Number_of_Followers + Number_of_Tweets +
Percentage._of_Retweets + Twitter_Age_Years
mv_anal <- list()
specs <- levels(sub_dat_norm$Journal_Specialty)
for(i in 1:4){
spec <- specs[i]
dat <- dplyr::filter(sub_dat_norm, Journal_Specialty == spec)
lm <- lm(formula, dat)
mv_anal[[i]] <- lm
}
# Creating Table
specs <- c("Cardiothoracic Surgery",
"Neurosurgery",
"Orthopedic Surgery",
"Plastic Surgery")
rsq <- c(summary(mv_anal[[1]])$r.squared,
summary(mv_anal[[2]])$r.squared,
summary(mv_anal[[3]])$r.squared,
summary(mv_anal[[4]])$r.squared)
pval <- c(pf(summary(mv_anal[[1]])$fstatistic[1],
summary(mv_anal[[1]])$fstatistic[2],
summary(mv_anal[[1]])$fstatistic[3],
lower.tail = F),
pf(summary(mv_anal[[2]])$fstatistic[1],
summary(mv_anal[[2]])$fstatistic[2],
summary(mv_anal[[1]])$fstatistic[3],
lower.tail = F),
pf(summary(mv_anal[[3]])$fstatistic[1],
summary(mv_anal[[3]])$fstatistic[2],
summary(mv_anal[[3]])$fstatistic[3],
lower.tail = F),
pf(summary(mv_anal[[4]])$fstatistic[1],
summary(mv_anal[[4]])$fstatistic[2],
summary(mv_anal[[4]])$fstatistic[3],
lower.tail = F)
)
cors_byspec <- data.frame(specs,
round(rsq, 3),
round(pval, 3))
colnames(cors_byspec) <- c("Specialty", "R-squared", "P-value")
knitr::kable(cors_byspec)
specs
```{r setup, include=FALSE}
aov(SJR_2021 ~ Number_of_Followers + Number_of_Tweets + Percentage._of_Retweets + Twitter_Age_Years, sub_dat_norm)
summary(anova_sjr)
anova_sjr <- aov(SJR_2021 ~ Number_of_Followers + Number_of_Tweets + Percentage._of_Retweets + Twitter_Age_Years, sub_dat_norm)
summary(anova_sjr)
anova_sjr <- aov(Journal_Specialty ~ Number_of_Followers + Number_of_Tweets + Percentage._of_Retweets + Twitter_Age_Years, sub_dat_norm)
summary(anova_sjr)
?aov
?formula
anova_sjr <- aov(SJR_2021 ~ Number_of_Followers*Number_of_Tweets*Percentage._of_Retweets*Twitter_Age_Years + Journal_Specialty, sub_dat_norm)
summary(anova_sjr)
anova_sjr <- aov(SJR_2021 ~ Number_of_Followers + Journal_Specialty, sub_dat_norm)
summary(anova_sjr)
anova_sjr <- aov(SJR_2021 ~ Number_of_Followers*Number_of_Tweets*Percentage._of_Retweets*Twitter_Age_Years + Journal_Specialty, sub_dat_norm)
#anova_sjr <- aov(SJR_2021 ~ Number_of_Followers* + Journal_Specialty, sub_dat_norm)
summary(anova_sjr)
anova_sjr <- aov(SJR_2021 ~ Number_of_Followers + Journal_Specialty, sub_dat_norm)
summary(anova_sjr)
?aov
anova_sjr <- aov(SJR_2021 ~ Number_of_Followers*Journal_Specialty, sub_dat_norm)
summary(anova_sjr)
lm_sjr <- lm(SJR_2021 ~ Number_of_Followers*Journal_Specialty, sub_dat_norm)
summary(lm_sjr)
lm_sjr <- lm(SJR_2021 ~ Number_of_Followers*Number_of_Tweets*Percentage._of_Retweets*Twitter_Age_Years*Journal_Specialty, sub_dat_norm)
summary(lm_sjr)
lm_sjr <- lm(SJR_2021 ~ (Number_of_Followers + Number_of_Tweets + Percentage._of_Retweets + Twitter_Age_Years)*Journal_Specialty, sub_dat_norm)
summary(lm_sjr)
summary(lm_sjr)$coefficients
size(summary(lm_sjr)$coefficients)
dim(summary(lm_sjr)$coefficients)
summary(lm_sjr)$coefficients
summary(lm_sjr)
anova_sjr <- aov(SJR_2021 ~ (Number_of_Followers + Number_of_Tweets + Percentage._of_Retweets + Twitter_Age_Years)*Journal_Specialty, sub_dat_norm)
summary(anova_sjr)
summary(lm_sjr)
setwd("~/Documents/Moffitt/Project/MATLAB/Scripts/RT_Fx")
setwd("~/Documents/Moffitt/Project/MATLAB/Scripts/RT_Fx")
# Loading in the Data
ti_all <- read.table("/Users/saketpandit/Documents/Moffitt/Project/Data/TumorAndImmuneCounts_Anonymized.xlsx");
setwd("~/Documents/Moffitt/Project/MATLAB/Scripts/RT_Fx")
# Loading in the Data
ti_all <- readxl::read_excel("/Users/saketpandit/Documents/Moffitt/Project/Data/TumorAndImmuneCounts_Anonymized.xlsx");
ti_outcome <- readxl::read_excel("/Users/saketpandit/Documents/Moffitt/Project/Data/TumorAndImmuneCounts_LungOutcomeSubset_Anonymized.xlsx");
#ti_all = join(ti_outcome(1:end-9,:), ti_all);
View(ti_all)
ti.sub <- dplyr::left_join(ti_outcome[1:nrow(ti_outcome)-9,], ti_all)
ti_outcome[1:nrow(ti_outcome)-9,]
test <- ti_outcome[c(1:nrow(ti_outcome)-9),]
test <- ti_outcome[1:3,]
nrow(ti_outcome)
nrow(ti_outcome)-9
1:nrow(ti_outcome)-9
1:(nrow(ti_outcome)-9)
ti.sub <- dplyr::left_join(ti_outcome[1:(nrow(ti_outcome)-9),], ti_all)
rm(test)
lrf <- ti.sub$`Local Failure`
SF2 <- ti.sub$`SF (2)`
t <- ti.sub$`Cancer Cells`
at <- ti.sub$`Total Anti-Tumor Case 3`
rc <- ti.sub$`Regulatory Cells`
rsi <- ti.sub$RSI
dat <- data.frame(t, at, rc)
dat <- dat * 10^6
pcr1 <- prcomp(dat)
plot(pcr1)
summary(pcr1)
t <- t/max(t)
at <- at/max(at)
rc <- max(rc)
dat <- data.frame(t, at, rc)
dat <- dat * 10^6
# Calculating Principle Components
pcr1 <- prcomp(dat)
summary(pcr1)
pcr1 <- prcomp(dat, scale = T)
View(dat)
lrf <- ti.sub$`Local Failure` # 0 = Tumor resolution, 1 = Tumor escape
SF2 <- ti.sub$`SF (2)`
rsi <- ti.sub$RSI
t <- ti.sub$`Cancer Cells`
at <- ti.sub$`Total Anti-Tumor Case 3`
rc <- ti.sub$`Total Pro-Tumor Case 3`
t <- t/max(t)
at <- at/max(at)
rc <- max(rc)
dat <- data.frame(t, at, rc)
dat <- dat * 10^6
# Calculating Principle Components
pcr1 <- prcomp(dat, scale = T)
pcr1 <- prcomp(dat)
summary(pcr1)
biplot(pcr1)
pcr1
t <- t/max(t)
at <- at/max(at)
rc <- rc/max(rc)
dat <- data.frame(t, at, rc)
dat <- dat * 10^6
# Calculating Principle Components
pcr1 <- prcomp(dat)
summary(pcr1)
biplot(pcr1)
pcr1
lrf <- ti.sub$`Local Failure` # 0 = Tumor resolution, 1 = Tumor escape
SF2 <- ti.sub$`SF (2)`
rsi <- ti.sub$RSI
t <- ti.sub$`Cancer Cells`
at <- ti.sub$`Total Anti-Tumor Case 3`
rc <- ti.sub$`Total Pro-Tumor Case 3`
t <- t/max(t)
at <- at/max(at)
rc <- rc/max(rc)
dat <- data.frame(t, at, rc)
dat <- dat * 10^6
pcr1 <- prcomp(dat)
summary(pcr1)
biplot(pcr1)
pcr1
t <- t/max(t)
at <- at/max(at)
rc <- rc/max(rc)
dat <- data.frame(t, at, rc)
dat <- dat #* 10^6
# Calculating Principle Components
pcr1 <- prcomp(dat)
summary(pcr1)
biplot(pcr1)
pcr1
lrf <- ti.sub$`Local Failure` # 0 = Tumor resolution, 1 = Tumor escape
SF2 <- ti.sub$`SF (2)`
rsi <- ti.sub$RSI
t <- ti.sub$`Cancer Cells`
at <- ti.sub$`Total Anti-Tumor Case 3`
rc <- ti.sub$`Total Pro-Tumor Case 3`
# PCA Plot ----------------------------------------------------------------
# Data Cleaning
t <- t/max(t)
at <- at/max(at)
rc <- rc/max(rc)
dat <- data.frame(t, at, rc)
dat <- dat * 10^6
# Calculating Principle Components
pcr1 <- prcomp(dat)
summary(pcr1)
biplot(pcr1)
pcr1
hist(SF2)
boxplot(SF2)
setwd("~/Documents/Moffitt/Project/MATLAB/Scripts/RT_Fx")
# Loading in Data ---------------------------------------------------------
# Datatable
ti_all <- readxl::read_excel("/Users/saketpandit/Documents/Moffitt/Project/Data/TumorAndImmuneCounts_Anonymized.xlsx")
ti_outcome <- readxl::read_excel("/Users/saketpandit/Documents/Moffitt/Project/Data/TumorAndImmuneCounts_LungOutcomeSubset_Anonymized.xlsx")
ti.sub <- dplyr::left_join(ti_outcome[1:(nrow(ti_outcome)-9),], ti_all)
# Variables of Interest
lrf <- ti.sub$`Local Failure` # 0 = Tumor resolution, 1 = Tumor escape
SF2 <- ti.sub$`SF (2)`
rsi <- ti.sub$RSI
t <- ti.sub$`Cancer Cells`
at <- ti.sub$`Total Anti-Tumor Case 3`
rc <- ti.sub$`Total Pro-Tumor Case 3`
# PCA Plot ----------------------------------------------------------------
# Data Cleaning
t <- t/max(t)
at <- at/max(at)
rc <- rc/max(rc)
dat <- data.frame(t, at, rc)
dat <- dat * 10^6
# Calculating Principle Components
pcr1 <- prcomp(dat)
biplot(pcr1)
summary(pcr1)
pcr1
